class ::<root> < ::Object ()
  class ::<Class:<root>>[<AttachedClass>] < ::<Class:Object> (Sig)
    method ::<Class:<root>>#<static-init> (<blk>) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:2
      argument <blk><block> @ Loc {file=test/testdata/resolver/zsuper_method_abstract_overridable.rb start=??? end=???}
  class ::AbstractFooable < ::Object () @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:37
    method ::AbstractFooable#foo : abstract (<blk>) -> Sorbet::Private::Static::Void @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:43
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/zsuper_method_abstract_overridable.rb start=??? end=???}
  class ::<Class:AbstractFooable>[<AttachedClass>] < ::<Class:Object> (Helpers, Sig) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:37
    type-member(+) ::<Class:AbstractFooable>::<AttachedClass> -> T.attached_class (of AbstractFooable) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:37
    method ::<Class:AbstractFooable>#<static-init> (<blk>) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:37
      argument <blk><block> @ Loc {file=test/testdata/resolver/zsuper_method_abstract_overridable.rb start=??? end=???}
  class ::Child < ::Parent () @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:21
    method ::Child#method_no_sig : private|zsuper () @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:26
    method ::Child#method_with_abstract_sig : private|zsuper () @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:32
    method ::Child#method_with_overridable_sig : private|zsuper () @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:34
    method ::Child#method_with_sig : private|zsuper () @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:30
  class ::<Class:Child>[<AttachedClass>] < ::<Class:Parent> () @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:21
    type-member(+) ::<Class:Child>::<AttachedClass> -> T.attached_class (of Child) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:21
    method ::<Class:Child>#<static-init> (<blk>) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:21
      argument <blk><block> @ Loc {file=test/testdata/resolver/zsuper_method_abstract_overridable.rb start=??? end=???}
  class ::FooImpl < ::AbstractFooable () @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:46
    method ::FooImpl#foo : private|zsuper () @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:47
  class ::<Class:FooImpl>[<AttachedClass>] < ::<Class:AbstractFooable> () @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:46
    type-member(+) ::<Class:FooImpl>::<AttachedClass> -> T.attached_class (of FooImpl) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:46
    method ::<Class:FooImpl>#<static-init> (<blk>) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:46
      argument <blk><block> @ Loc {file=test/testdata/resolver/zsuper_method_abstract_overridable.rb start=??? end=???}
  class ::Parent < ::Object () @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:4
    method ::Parent#method_no_sig (<blk>) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:9
      argument <blk><block> @ Loc {file=test/testdata/resolver/zsuper_method_abstract_overridable.rb start=??? end=???}
    method ::Parent#method_with_abstract_sig : abstract (<blk>) -> Sorbet::Private::Static::Void @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:15
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/zsuper_method_abstract_overridable.rb start=??? end=???}
    method ::Parent#method_with_overridable_sig : overridable (<blk>) -> Sorbet::Private::Static::Void @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:18
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/zsuper_method_abstract_overridable.rb start=??? end=???}
    method ::Parent#method_with_sig (<blk>) -> Sorbet::Private::Static::Void @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:12
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/resolver/zsuper_method_abstract_overridable.rb start=??? end=???}
  class ::<Class:Parent>[<AttachedClass>] < ::<Class:Object> (Helpers, Sig) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:4
    type-member(+) ::<Class:Parent>::<AttachedClass> -> T.attached_class (of Parent) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:4
    method ::<Class:Parent>#<static-init> (<blk>) @ test/testdata/resolver/zsuper_method_abstract_overridable.rb:4
      argument <blk><block> @ Loc {file=test/testdata/resolver/zsuper_method_abstract_overridable.rb start=??? end=???}

